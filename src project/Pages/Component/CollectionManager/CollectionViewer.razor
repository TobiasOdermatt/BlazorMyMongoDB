@page "/CollectionViewer/{dbname}/{collectionname}"
@using Data.DB;
@using MongoDB.Bson;
@using MongoDB.Bson.IO;
@using MongoDB.Bson.Serialization;
@using MongoDB.Driver

@inject DBController DBController;
<h2>View Collection: @collectionname</h2>
<div class="row bottom-div">
    @if (CollectionList == null)
    {
        <p class="text-danger">Failed to read collection @collectionname</p>
    }
    else{
        @foreach (var Collection in CollectionList)
        {
            @using BlazorServerMyMongo.Pages.Component.CollectionManager
            <ViewCollection Collection="@Collection" />
        }
    }


</div>
@code {
    [Parameter]
    public string? dbname { get; set; }
    [Parameter]
    public string? collectionname { get; set; }

    List<string>? CollectionList;

    private IMongoCollection<BsonDocument>? ListCollection()
    {
        if (dbname is null || collectionname is null)
            return null;

        return DBController.GetCollection(dbname, collectionname);
    }

    protected override Task OnInitializedAsync()
    {
        IMongoCollection<BsonDocument>? CollectionData = ListCollection();
        CollectionList = GenerateOutput(CollectionData);
        return base.OnInitializedAsync();
    }

    private List<string>? GenerateOutput(IMongoCollection<BsonDocument>? Collection)
    {
        List<string> Output = new List<string>();
        try
        {
            if (Collection is null)
                return null;

            var Filter = new BsonDocument();
            var Cursor = Collection.Find(Filter).ToCursor();
            while (Cursor.MoveNext())
            {
                foreach (var Document in Cursor.Current)
                {
                    Output.Add(Document.ToJson());
                }
            }
            return Output;
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
            return null;
        }
    }
 }